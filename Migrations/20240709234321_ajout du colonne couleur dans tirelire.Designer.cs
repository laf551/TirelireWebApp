// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TirelireWebApp.Data;

#nullable disable

namespace TirelireWebApp.Migrations
{
    [DbContext(typeof(TirelireContext))]
    [Migration("20240709234321_ajout du colonne couleur dans tirelire")]
    partial class ajoutducolonnecouleurdanstirelire
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TirelireWebApp.Models.Description", b =>
                {
                    b.Property<int>("IdTirelire")
                        .HasColumnType("int");

                    b.Property<int>("IdDetail")
                        .HasColumnType("int");

                    b.HasKey("IdTirelire", "IdDetail");

                    b.HasIndex("IdDetail");

                    b.ToTable("DescriptionSet");

                    b.HasData(
                        new
                        {
                            IdTirelire = 1,
                            IdDetail = 2
                        },
                        new
                        {
                            IdTirelire = 1,
                            IdDetail = 1
                        });
                });

            modelBuilder.Entity("TirelireWebApp.Models.DetailTirelire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capacité")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hauteur")
                        .HasColumnType("float");

                    b.Property<double>("Largeur")
                        .HasColumnType("float");

                    b.Property<double>("Longeur")
                        .HasColumnType("float");

                    b.Property<double>("Poids")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DetailTireliresSet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacité = "petit format",
                            Fabricant = "Robert",
                            Hauteur = 5.0,
                            Largeur = 5.0,
                            Longeur = 5.0,
                            Poids = 0.5
                        },
                        new
                        {
                            Id = 2,
                            Capacité = "moyen format",
                            Fabricant = "Robert",
                            Hauteur = 10.0,
                            Largeur = 10.0,
                            Longeur = 10.0,
                            Poids = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Capacité = "grand format",
                            Fabricant = "Robert",
                            Hauteur = 15.0,
                            Largeur = 15.0,
                            Longeur = 15.0,
                            Poids = 1.5
                        });
                });

            modelBuilder.Entity("TirelireWebApp.Models.Tirelire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrlTirelire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTirelire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceTirelire")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TirelireSet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Couleur = "Vert pomme",
                            ImageUrlTirelire = "https://www.allbranded.fr/out/shop-fr/pictures/generated/product/1/480_480_80/mo8132-48.jpg",
                            NameTirelire = "Tirelire Cochon",
                            PriceTirelire = 19.989999999999998
                        });
                });

            modelBuilder.Entity("TirelireWebApp.Models.Description", b =>
                {
                    b.HasOne("TirelireWebApp.Models.DetailTirelire", "Detail")
                        .WithMany("DescriptionTirelire")
                        .HasForeignKey("IdDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TirelireWebApp.Models.Tirelire", "Tirelire")
                        .WithMany("DescriptionTirelire")
                        .HasForeignKey("IdTirelire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");

                    b.Navigation("Tirelire");
                });

            modelBuilder.Entity("TirelireWebApp.Models.DetailTirelire", b =>
                {
                    b.Navigation("DescriptionTirelire");
                });

            modelBuilder.Entity("TirelireWebApp.Models.Tirelire", b =>
                {
                    b.Navigation("DescriptionTirelire");
                });
#pragma warning restore 612, 618
        }
    }
}
